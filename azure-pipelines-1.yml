trigger:
  - main

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

stages:
  - stage: Build
    displayName: CI (build & tests)
    jobs:
      - job: gradleBuild
        pool:
          vmImage: ubuntu-latest

        steps:
          - task: Cache@2
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts' # Swap build.gradle.kts for build.gradle when using Groovy
              restoreKeys:
                | # The fallback keys if the primary key fails (Optional)
                gradle | "$(Agent.OS)"
                gradle
              path: $(GRADLE_USER_HOME)
            displayName: Configure gradle caching

          - task: Gradle@4
            inputs:
              gradleWrapperFile: "gradlew"
              tasks: "build"
              options: "--build-cache"
              publishJUnitResults: true
              testResultsFiles: "**/TEST-*.xml"
              javaHomeOption: "JDKVersion"
              sonarQubeRunAnalysis: false
              checkStyleRunAnalysis: false
              spotBugsAnalysis: false

          - script: |
              # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
              ./gradlew --stop
            displayName: Gradlew stop

          - task: CopyFiles@2
            displayName: "Copy Files to artifact staging directory"
            inputs:
              SourceFolder: "$(System.DefaultWorkingDirectory)"
              Contents: "**/build/libs/*SNAPSHOT.jar"
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: drop

      - job: BuildAndPushImage
        displayName: Build and push docker image
        pool:
          vmImage: ubuntu-latest
        dependsOn: gradleBuild
        condition: succeeded()
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: pf2128sprint42tdsa
          - task: Docker@2
            inputs:
              command: buildAndPush
              repository: guacamole
              tags: |
                latest
                $(Build.BuildId)
